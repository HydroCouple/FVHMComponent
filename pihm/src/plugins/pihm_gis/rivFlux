PIHM_v2.0/initialize.cpp:    		DS->Ele[i].KsatH = CS->Cal.KsatH*DS->Geol[(DS->Ele[i].geol-1)].KsatH;
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].KsatV = CS->Cal.KsatV*DS->Geol[(DS->Ele[i].geol-1)].KsatV;
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].infKsatV = CS->Cal.infKsatV*DS->Soil[(DS->Ele[i].soil-1)].KsatV;
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].Porosity = CS->Cal.Porosity*(DS->Soil[(DS->Ele[i].soil-1)].ThetaS - DS->Soil[(DS->Ele[i].soil-1)].ThetaR);
PIHM_v2.0/initialize.cpp://		DS->Ele[i].Porosity = CS->Cal.Porosity*(DS->Geol[(DS->Ele[i].geol-1)].ThetaS - DS->Geol[(DS->Ele[i].geol-1)].ThetaR);
PIHM_v2.0/initialize.cpp:		DS->Ele[i].Alpha = CS->Cal.Alpha*DS->Soil[(DS->Ele[i].soil-1)].Alpha;
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].Beta = CS->Cal.Beta*DS->Soil[(DS->Ele[i].soil-1)].Beta; 
PIHM_v2.0/initialize.cpp://		DS->Ele[i].Alpha = CS->Cal.Alpha*DS->Geol[(DS->Ele[i].geol-1)].Alpha;
PIHM_v2.0/initialize.cpp://    		DS->Ele[i].Beta = CS->Cal.Beta*DS->Geol[(DS->Ele[i].geol-1)].Beta; 
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].hAreaF = CS->Cal.hAreaF*DS->Soil[(DS->Ele[i].soil-1)].hAreaF; 
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].vAreaF = CS->Cal.vAreaF*DS->Geol[(DS->Ele[i].geol-1)].vAreaF; 
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].macKsatV = CS->Cal.macKsatV*DS->Soil[(DS->Ele[i].soil-1)].macKsatV; 
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].macKsatH = CS->Cal.macKsatH*DS->Geol[(DS->Ele[i].geol-1)].macKsatH; 
PIHM_v2.0/initialize.cpp:		DS->Ele[i].macD=CS->Cal.macD*DS->Geol[DS->Ele[i].geol-1].macD;
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].infD=CS->Cal.infD*DS->Soil[DS->Ele[i].soil-1].infD;
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].RzD=CS->Cal.RzD*DS->LandC[DS->Ele[i].LC-1].RzD;  
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].Albedo = CS->Cal.Albedo*DS->LandC[DS->Ele[i].LC-1].Albedo;
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].VegFrac = CS->Cal.VegFrac*DS->LandC[DS->Ele[i].LC-1].VegFrac;                
PIHM_v2.0/initialize.cpp:    		DS->Ele[i].Rough = CS->Cal.Rough*DS->LandC[DS->Ele[i].LC-1].Rough;
PIHM_v2.0/initialize.cpp:    		DS->Riv[i].depth = CS->Cal.rivDepth*DS->Riv_Shape[DS->Riv[i].shape-1].depth;
PIHM_v2.0/initialize.cpp:		DS->Riv[i].coeff=CS->Cal.rivShapeCoeff*DS->Riv_Shape[DS->Riv[i].shape - 1].coeff;
PIHM_v2.0/initialize.cpp:		DS->Riv[i].KsatH=CS->Cal.rivKsatH*DS->Riv_Mat[DS->Riv[i].material-1].KsatH;
PIHM_v2.0/initialize.cpp:		DS->Riv[i].KsatV=CS->Cal.rivKsatV*DS->Riv_Mat[DS->Riv[i].material-1].KsatV;
PIHM_v2.0/initialize.cpp:		DS->Riv[i].bedThick=CS->Cal.rivbedThick*DS->Riv_Mat[DS->Riv[i].material-1].bedThick;
PIHM_v2.0/initialize.cpp:		DS->Riv[i].Rough=CS->Cal.rivRough*DS->Riv_Mat[DS->Riv[i].material - 1].Rough;
PIHM_v2.0/initialize.cpp:			DS->TSD_Prep[i].TS[j][1]=CS->Cal.Prep*DS->TSD_Prep[i].TS[j][1];
PIHM_v2.0/initialize.cpp:                        DS->TSD_Temp[i].TS[j][1]=CS->Cal.Temp*DS->TSD_Temp[i].TS[j][1];
PIHM_v2.0/initialize.cpp:	if(CS->FillEleSurf==1)
PIHM_v2.0/initialize.cpp:		if(CS->FillEleSub == 1)
PIHM_v2.0/initialize.cpp:	if (CS->init_type == 0)
PIHM_v2.0/initialize.cpp:  	else if (CS->init_type == 1)
PIHM_v2.0/read_alloc.cpp:  	fscanf(para_file, "%d %d", &(CS->Verbose), &(CS->Debug));
PIHM_v2.0/read_alloc.cpp:  	fscanf(para_file, "%d", &(CS->init_type));
PIHM_v2.0/read_alloc.cpp:  	fscanf(para_file, "%d %d %d %d", &(CS->gwD), &(CS->surfD), &(CS->snowD), &(CS->rivStg));
PIHM_v2.0/read_alloc.cpp:  	fscanf(para_file, "%d %d %d", &(CS->Rech), &(CS->IsD), &(CS->usD));
PIHM_v2.0/read_alloc.cpp:	fscanf(para_file, "%d %d %d", &(CS->et[0]), &(CS->et[1]), &(CS->et[2]));
PIHM_v2.0/read_alloc.cpp:		fscanf(para_file, "%d", &(CS->rivFlx[i]));
PIHM_v2.0/read_alloc.cpp:        fscanf(para_file, "%d %d %d %d", &(CS->gwDInt), &(CS->surfDInt), &(CS->snowDInt), &(CS->rivStgInt));
PIHM_v2.0/read_alloc.cpp:        fscanf(para_file, "%d %d %d %d", &(CS->RechInt), &(CS->IsDInt), &(CS->usDInt), &(CS->etInt));
PIHM_v2.0/read_alloc.cpp:	fscanf(para_file, "%d",&(CS->rivFlxInt));
PIHM_v2.0/read_alloc.cpp:  	fscanf(para_file, "%d", &(CS->Solver));
PIHM_v2.0/read_alloc.cpp:  	if(CS->Solver == 2)
PIHM_v2.0/read_alloc.cpp:    		fscanf(para_file, "%d %d %lf", &CS->GSType, &CS->MaxK, &CS->delt);
PIHM_v2.0/read_alloc.cpp:  	fscanf(para_file, "%lf %lf", &(CS->abstol), &(CS->reltol));
PIHM_v2.0/read_alloc.cpp:  	fscanf(para_file, "%lf %lf %lf", &(CS->InitStep), &(CS->MaxStep), &(CS->ETStep));
PIHM_v2.0/read_alloc.cpp:  	fscanf(para_file, "%lf %lf %d", &(CS->StartTime), &(CS->EndTime), &(CS->outtype));
PIHM_v2.0/read_alloc.cpp:  	//if(CS->outtype == 0)
PIHM_v2.0/read_alloc.cpp:    		fscanf(para_file, "%lf %lf", &CS->a, &CS->b);
PIHM_v2.0/read_alloc.cpp:  	if(CS->a != 1.0)
PIHM_v2.0/read_alloc.cpp:    		NumTout = (int)(log(1 - (CS->EndTime - CS->StartTime)*(1 -  CS->a)/CS->b)/log(CS->a));
PIHM_v2.0/read_alloc.cpp:    		if((CS->EndTime - CS->StartTime)/CS->b - ((int) (CS->EndTime - CS->StartTime)/CS->b) > 0)
PIHM_v2.0/read_alloc.cpp:      			NumTout = (int) ((CS->EndTime - CS->StartTime)/CS->b);
PIHM_v2.0/read_alloc.cpp:      			NumTout = (int) ((CS->EndTime - CS->StartTime)/CS->b - 1);
PIHM_v2.0/read_alloc.cpp:  	CS->NumSteps = NumTout + 1;
PIHM_v2.0/read_alloc.cpp:  	CS->Tout = (realtype *)malloc((CS->NumSteps + 1)*sizeof(realtype));
PIHM_v2.0/read_alloc.cpp:  	for(i=0; i<CS->NumSteps+1; i++)
PIHM_v2.0/read_alloc.cpp:      			CS->Tout[i] = CS->StartTime;
PIHM_v2.0/read_alloc.cpp:      			CS->Tout[i] = CS->Tout[i-1] + pow(CS->a, i)*CS->b;
PIHM_v2.0/read_alloc.cpp:  	if(CS->Tout[CS->NumSteps] < CS->EndTime)
PIHM_v2.0/read_alloc.cpp:    		CS->Tout[CS->NumSteps] = CS->EndTime;
PIHM_v2.0/read_alloc.cpp:	fscanf(para_file, "%d %d", &CS->FillEleSurf, &CS->FillEleSub);
PIHM_v2.0/read_alloc.cpp:	fscanf(global_calib,"%lf %lf %lf %lf %lf",&CS->Cal.KsatH,&CS->Cal.KsatV,&CS->Cal.infKsatV,&CS->Cal.macKsatH,&CS->Cal.macKsatV);
PIHM_v2.0/read_alloc.cpp:	fscanf(global_calib,"%lf %lf %lf",&CS->Cal.infD,&CS->Cal.RzD,&CS->Cal.macD);
PIHM_v2.0/read_alloc.cpp:	fscanf(global_calib,"%lf %lf %lf",&CS->Cal.Porosity,&CS->Cal.Alpha,&CS->Cal.Beta);
PIHM_v2.0/read_alloc.cpp:	fscanf(global_calib,"%lf %lf",&CS->Cal.vAreaF,&CS->Cal.hAreaF);
PIHM_v2.0/read_alloc.cpp:	fscanf(global_calib,"%lf %lf %lf",&CS->Cal.VegFrac,&CS->Cal.Albedo,&CS->Cal.Rough);
PIHM_v2.0/read_alloc.cpp:	fscanf(global_calib,"%lf %lf",&CS->Cal.Prep,&CS->Cal.Temp);
PIHM_v2.0/read_alloc.cpp:	fscanf(global_calib,"%lf %lf %lf %lf",&CS->Cal.rivRough,&CS->Cal.rivKsatH,&CS->Cal.rivKsatV,&CS->Cal.rivbedThick);
PIHM_v2.0/read_alloc.cpp:	fscanf(global_calib,"%lf %lf",&CS->Cal.rivDepth,&CS->Cal.rivShapeCoeff);
